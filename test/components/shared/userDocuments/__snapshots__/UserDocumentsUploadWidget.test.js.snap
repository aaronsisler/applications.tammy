// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UserDocumentsUploadWidget should render UserDocumentsUploadWidget correctly when isUploading is true 1`] = `
<div
  id="user_documents_upload_widget"
>
  <div
    className="user_documents_upload_content"
  >
    <div
      className="user_documents_upload_content__loader"
    >
      <label
        className="button"
      >
        Upload a document
        <FirebaseFileUploader
          accept="application/pdf, application/msword, .pdf, .docx, .doc"
          hidden={true}
          name="user_documents_upload"
          onProgress={[Function]}
          onUploadError={[Function]}
          onUploadStart={[Function]}
          onUploadSuccess={[Function]}
          storageRef={
            Object {
              "child": [Function],
            }
          }
        />
      </label>
    </div>
    <div
      className="user_documents_upload_content__progress"
    >
      <t
        percent={0}
      />
    </div>
  </div>
</div>
`;

exports[`UserDocumentsUploadWidget should render UserDocumentsUploadWidget correctly when success is populated 1`] = `
<div
  id="user_documents_upload_widget"
>
  <div
    className="user_documents_upload_content"
  >
    <div
      className="user_documents_upload_content__loader"
    >
      <label
        className="button"
      >
        Upload a document
        <FirebaseFileUploader
          accept="application/pdf, application/msword, .pdf, .docx, .doc"
          hidden={true}
          name="user_documents_upload"
          onProgress={[Function]}
          onUploadError={[Function]}
          onUploadStart={[Function]}
          onUploadSuccess={[Function]}
          storageRef={
            Object {
              "child": [Function],
            }
          }
        />
      </label>
    </div>
    <div
      className="user_documents_upload_content__success"
    >
      Mocked Success
    </div>
  </div>
</div>
`;

exports[`UserDocumentsUploadWidget should render UserDocumentsUploadWidget with the default state 1`] = `
<div
  id="user_documents_upload_widget"
>
  <div
    className="user_documents_upload_content"
  >
    <div
      className="user_documents_upload_content__loader"
    >
      <label
        className="button"
      >
        Upload a document
        <FirebaseFileUploader
          accept="application/pdf, application/msword, .pdf, .docx, .doc"
          hidden={true}
          name="user_documents_upload"
          onProgress={[Function]}
          onUploadError={[Function]}
          onUploadStart={[Function]}
          onUploadSuccess={[Function]}
          storageRef={
            Object {
              "child": [Function],
            }
          }
        />
      </label>
    </div>
  </div>
</div>
`;
